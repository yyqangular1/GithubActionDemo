name: crm-demo-nacos
run-name: crm-demo-nacos

  
# Controls when the workflow will run
# define trigger event
on: 
  workflow_dispatch

jobs:
  getNacosToken:
    runs-on: [ self-hosted ]
    name: get access token from nacos
    outputs:
      matrix: ${{ steps.parse_instance_list.outputs.ips }}
    steps:
      - name: get access token from nacos
        id: get_nacos_token
        run: |
          echo `pwd`
          RESPONSE=$( curl -X POST 'http://101.133.164.217:8848/nacos/v1/auth/login' -d 'username=nacos&password=so-fast(Nttdata)' )
          echo "nacos_response=$RESPONSE" >> $GITHUB_OUTPUT
      - name: Parse nacos token JSON
        id: parse_nacos_token
        run: |
          echo "parse_token=${{ fromJSON(steps.get_nacos_token.outputs.nacos_response).accessToken }}" >> $GITHUB_ENV
      - name: get microservice status
        id: instance_response
        run: |
          echo "Get instance list"
          ##
          INSTANCE_LIST=$( curl -X GET "http://101.133.164.217:8848/nacos/v1/ns/instance/list?serviceName=so-fast-admin&groupName=SO_FAST_GROUP&accessToken=$parse_token")
          echo "instance list: $INSTANCE_LIST"
          echo "instance_list=$INSTANCE_LIST" >> $GITHUB_OUTPUT
      - name: Parse instance JSON
        id: parse_instance_list
        run: |
          ${{ fromJson(steps.instance_response.outputs.instance_list).hosts.length }}
          echo "serviceName=${{ fromJSON(steps.instance_response.outputs.instance_list).hosts[0].serviceName }}" >> $GITHUB_OUTPUT
          echo "clusterName=${{ fromJSON(steps.instance_response.outputs.instance_list).hosts[0].clusterName }}" >> $GITHUB_OUTPUT
          echo "ips=${{ fromJSON(steps.instance_response.outputs.instance_list).hosts.*.ip }}" >> $GITHUB_OUTPUT

  deployService:
    needs: getNacosToken
    runs-on: [ self-hosted ]
    name: deploy microservice
    strategy:
      matrix: ${{ fromJson(needs.getNacosToken.outputs.ips) }}
    steps:
      - name: Offline microservice  
        run: |
          echo "Offline microservice"
          ##
          echo "serviceName: ${{ needs.getNacosToken.outputs.serviceName }}"
          echo "clusterName: ${{ needs.getNacosToken.outputs.clusterName }}"
          echo "instance_ip: ${{ needs.getNacosToken.outputs.instance_ip }}"


          #INSTANCE_LIST=$( curl -X PUT "http://101.133.164.217:8848/nacos/v1/ns/instance?accessToken=$parse_token" -d 'serviceName=nacos&password=so-fast(Nttdata))
          ##

