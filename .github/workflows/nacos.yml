name: crm-demo-nacos
run-name: crm-demo-nacos

  
# Controls when the workflow will run
# define trigger event
on: 
  workflow_dispatch

jobs:
  getNacosToken:
    runs-on: [ self-hosted ]
    name: get access token from nacos
    steps:
      #- name: Set up Node.js (v16 LTS)
      #  uses: actions/setup-node@v3
      #  with:
      #    node-version: '16'
      - name: Fetch JSON from API and process it
        uses: actions/github-script@v4
        with:
          script: |
            const url = 'http://101.133.164.217:8848/nacos/v1/auth/login';
            const requestData = {
              username: 'nacos',
              password: 'so-fast(Nttdata)'
            };
            const response = await fetch(url, {
              method: 'POST',  // 指定为 POST 请求
              headers: {
                'Content-Type': 'application/json',  // 设置请求头，指定发送 JSON 数据
              },
              body: JSON.stringify(requestData)  // 将请求体数据转换为 JSON 字符串
            });

            if (!response.ok) {
              throw new Error(`Failed to send POST request: ${response.statusText}`);
            }

            const responseData = await response.json();
            console.log('Response Data:', responseData);
    
      - name: get access token from nacos
        run: |
          echo `pwd`
          #RESPONSE=$( curl -X POST 'http://101.133.164.217:8848/nacos/v1/auth/login' -d 'username=nacos&password=so-fast(Nttdata)' )
          ##
          #ACCESS_TOKEN=$(echo $RESPONSE | jq -r '.accessToken')
          #ACCESS_TOKEN=$(echo $RESPONSE | grep -oP '"accessToken"\s*:\s*"\K[^"]+')
          ## output token
          #echo "Access Token: $ACCESS_TOKEN"
          ## set env
          #echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

      - name: get microservice status
        run: |
          echo "Access Token from Nacos: $ACCESS_TOKEN"
          ##
          INSTANCE_LIST=$( curl -X GET http://101.133.164.217:8848/nacos/v1/ns/instance/list?serviceName=so-fast-admin&groupName=SO_FAST_GROUP&accessToken=$ACCESS_TOKEN)
          ##
          echo "instance list: $INSTANCE_LIST"
      
